// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_bio08
NumericMatrix cpp_bio08(NumericMatrix tas, NumericMatrix pr);
RcppExport SEXP _squirrygis_cpp_bio08(SEXP tasSEXP, SEXP prSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type tas(tasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pr(prSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_bio08(tas, pr));
    return rcpp_result_gen;
END_RCPP
}
// highest_quarter
NumericMatrix highest_quarter(NumericMatrix x);
RcppExport SEXP _squirrygis_highest_quarter(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(highest_quarter(x));
    return rcpp_result_gen;
END_RCPP
}
// lowest_quarter
NumericMatrix lowest_quarter(NumericMatrix x);
RcppExport SEXP _squirrygis_lowest_quarter(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(lowest_quarter(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_squirrygis_cpp_bio08", (DL_FUNC) &_squirrygis_cpp_bio08, 2},
    {"_squirrygis_highest_quarter", (DL_FUNC) &_squirrygis_highest_quarter, 1},
    {"_squirrygis_lowest_quarter", (DL_FUNC) &_squirrygis_lowest_quarter, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_squirrygis(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
